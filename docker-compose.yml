version: '3.8'

services:
  mysql:
    image: mysql:8.0.35
    container_name: chatdb
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3308:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          memory: 256M

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chatbot-app
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    env_file:
      - .env
    environment:
      # Server
      SERVER_PORT: ${SERVER_PORT:-433}

      # Database
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/${DB_NAME}?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver

      # Profile
      SPRING_PROFILES_ACTIVE: docker

      # JVM Options
      JAVA_OPTS: -Xmx256m -Xms128m -XX:+UseG1GC
    ports:
      - "${SERVER_PORT:-443}:443"
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: |
        wget --no-verbose --tries=1 --spider http://localhost:443/actuator/health || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          memory: 256M

volumes:
  mysql_data:
    driver: local

networks:
  app-network:
    driver: bridge